const rate1 = document.querySelector(".rate1");
const rate2 = document.querySelector(".rate2");
const resultBtn = document.querySelector(".result");
const selects = document.querySelectorAll(".options select");
const sel1 = selects[0];
const sel2 = selects[1];
const inputs = document.querySelectorAll(".input input");
const inpt1 = inputs[0];
const inpt2 = inputs[1];



let mainContainerRates = {}; // For main container rates
let rateCardRates = {}; // For rate-card rates

const exchangeRatesURLMain = "https://api.exchangerate.host/latest?base=USD";
const exchangeRatesURLRateCard = "https://api.exchangerate.host/latest?base=NGN"; // Use NGN as the base currency for rate-card

fetchExchangeRates();

async function fetchExchangeRates() {
    try {
        const [responseMain, responseRateCard] = await Promise.all([
            fetch(exchangeRatesURLMain),
            fetch(exchangeRatesURLRateCard)
        ]);

        const dataMain = await responseMain.json();
        mainContainerRates = dataMain.rates;

        const dataRateCard = await responseRateCard.json();
        rateCardRates = dataRateCard.rates;

        populateOptions();
        updateRateCard();
    } catch (error) {
        console.error("Error fetching exchange rates:", error);
    }
}

function populateOptions() {
    let val = "";
    Object.keys(mainContainerRates).forEach(code => {
        const flagEmoji = getFlagEmoji(code); // Function to get the flag emoji
        const str = `<option value="${code}">${flagEmoji} ${code}</option>`;
        val += str;
    });
    selects.forEach(s => s.innerHTML = val);
    displayRate();
}

function getFlagEmoji(currencyCode) {
    const flagEmojis = {
        USD: "ðŸ‡ºðŸ‡¸", GBP: "ðŸ‡¬ðŸ‡§", EUR: "ðŸ‡ªðŸ‡º", CAD: "ðŸ‡¨ðŸ‡¦", AED: "ðŸ‡¦ðŸ‡ª", AED: "ðŸ‡¦ðŸ‡ª", AFN: "ðŸ‡¦ðŸ‡«", ALL: "ðŸ‡¦ðŸ‡±", AMD: "ðŸ‡¦ðŸ‡²", ANG: "ðŸ‡¦ðŸ‡³", AOA: "ðŸ‡¦ðŸ‡´", ARS: "ðŸ‡¦ðŸ‡·", AUD: "ðŸ‡¦ðŸ‡º", AWG: "ðŸ‡¦ðŸ‡¼", AZN: "ðŸ‡¦ðŸ‡¿", BAM: "ðŸ‡§ðŸ‡¦", BBD: "ðŸ‡§ðŸ‡§", BDT: "ðŸ‡§ðŸ‡©", BGN: "ðŸ‡§ðŸ‡¬", BHD: "ðŸ‡§ðŸ‡­", BIF: "ðŸ‡§ðŸ‡®", BMD: "ðŸ‡§ðŸ‡²", BND: "ðŸ‡§ðŸ‡³", BOB: "ðŸ‡§ðŸ‡´", BRL: "ðŸ‡§ðŸ‡·", BSD: "ðŸ‡§ðŸ‡¸", BTN: "ðŸ‡§ðŸ‡¹", BWP: "ðŸ‡§ðŸ‡¼", BYN: "ðŸ‡§ðŸ‡¾", BZD: "ðŸ‡§ðŸ‡¿", CAD: "ðŸ‡¨ðŸ‡¦", CDF: "ðŸ‡¨ðŸ‡©", CHF: "ðŸ‡¨ðŸ‡­", CLP: "ðŸ‡¨ðŸ‡±", CNY: "ðŸ‡¨ðŸ‡³", COP: "ðŸ‡¨ðŸ‡´", CRC: "ðŸ‡¨ðŸ‡·", CUC: "ðŸ‡¨ðŸ‡º", CVE: "ðŸ‡¨ðŸ‡»", CZK: "ðŸ‡¨ðŸ‡¿", DJF: "ðŸ‡©ðŸ‡¯", DKK: "ðŸ‡©ðŸ‡°", DOP: "ðŸ‡©ðŸ‡´", DZD: "ðŸ‡©ðŸ‡¿", EGP: "ðŸ‡ªðŸ‡¬", ERN: "ðŸ‡ªðŸ‡·", ETB: "ðŸ‡ªðŸ‡¹", EUR: "ðŸ‡ªðŸ‡º", FJD: "ðŸ‡«ðŸ‡¯", FKP: "ðŸ‡«ðŸ‡°", GBP: "ðŸ‡¬ðŸ‡§", GEL: "ðŸ‡¬ðŸ‡ª", GGP: "ðŸ‡¬ðŸ‡¬", GHS: "ðŸ‡¬ðŸ‡­", GIP: "ðŸ‡¬ðŸ‡®", GMD: "ðŸ‡¬ðŸ‡²", GNF: "ðŸ‡¬ðŸ‡³", GTQ: "ðŸ‡¬ðŸ‡¹", GYD: "ðŸ‡¬ðŸ‡¾", HKD: "ðŸ‡­ðŸ‡°", HNL: "ðŸ‡­ðŸ‡³", HRK: "ðŸ‡­ðŸ‡·", HTG: "ðŸ‡­ðŸ‡¹", HUF: "ðŸ‡­ðŸ‡º", IDR: "ðŸ‡®ðŸ‡©", ILS: "ðŸ‡®ðŸ‡±", IMP: "ðŸ‡®ðŸ‡²", INR: "ðŸ‡®ðŸ‡³", IQD: "ðŸ‡®ðŸ‡¶", IRR: "ðŸ‡®ðŸ‡·", ISK: "ðŸ‡®ðŸ‡¸", JEP: "ðŸ‡¯ðŸ‡ª", JMD: "ðŸ‡¯ðŸ‡²", JOD: "ðŸ‡¯ðŸ‡´", JPY: "ðŸ‡¯ðŸ‡µ", KES: "ðŸ‡°ðŸ‡ª", KGS: "ðŸ‡°ðŸ‡¬", KHR: "ðŸ‡°ðŸ‡­", KMF: "ðŸ‡°ðŸ‡²", KRW: "ðŸ‡°ðŸ‡·", KWD: "ðŸ‡°ðŸ‡¼", KYD: "ðŸ‡°ðŸ‡¾", KZT: "ðŸ‡°ðŸ‡¿", LAK: "ðŸ‡±ðŸ‡¦", LBP: "ðŸ‡±ðŸ‡§", LKR: "ðŸ‡±ðŸ‡°", LRD: "ðŸ‡±ðŸ‡·", LSL: "ðŸ‡±ðŸ‡¸", LYD: "ðŸ‡±ðŸ‡¾", MAD: "ðŸ‡²ðŸ‡¦", MDL: "ðŸ‡²ðŸ‡©", MGA: "ðŸ‡²ðŸ‡¬", MKD: "ðŸ‡²ðŸ‡°", MMK: "ðŸ‡²ðŸ‡²", MNT: "ðŸ‡²ðŸ‡³", MOP: "ðŸ‡²ðŸ‡´", MRO: "ðŸ‡²ðŸ‡·", MRU: "ðŸ‡²ðŸ‡·", MUR: "ðŸ‡²ðŸ‡º", MVR: "ðŸ‡²ðŸ‡»", MWK: "ðŸ‡²ðŸ‡¼", MXN: "ðŸ‡²ðŸ‡½", MYR: "ðŸ‡²ðŸ‡¾", MZN: "ðŸ‡²ðŸ‡¿", MZN: "ðŸ‡²ðŸ‡¿", NAD: "ðŸ‡³ðŸ‡¦", NGN: "ðŸ‡³ðŸ‡¬", NIO: "ðŸ‡³ðŸ‡®", NOK: "ðŸ‡³ðŸ‡´", NPR: "ðŸ‡³ðŸ‡µ", NZD: "ðŸ‡³ðŸ‡¿", OMR: "ðŸ‡´ðŸ‡²", PAB: "ðŸ‡µðŸ‡¦", PEN: "ðŸ‡µðŸ‡ª", PGK: "ðŸ‡µðŸ‡¬", PHP: "ðŸ‡µðŸ‡­", PKR: "ðŸ‡µðŸ‡°", PLN: "ðŸ‡µðŸ‡±", PYG: "ðŸ‡µðŸ‡¾", QAR: "ðŸ‡¶ðŸ‡¦", RON: "ðŸ‡·ðŸ‡´", RSD: "ðŸ‡·ðŸ‡¸", RUB: "ðŸ‡·ðŸ‡º", RWF: "ðŸ‡·ðŸ‡¼", SAR: "ðŸ‡¸ðŸ‡¦", SBD: "ðŸ‡¸ðŸ‡§", SCR: "ðŸ‡¸ðŸ‡¨", SDG: "ðŸ‡¸ðŸ‡©", SEK: "ðŸ‡¸ðŸ‡ª", SGD: "ðŸ‡¸ðŸ‡¬", SHP: "ðŸ‡¸ðŸ‡­", SLL: "ðŸ‡¸ðŸ‡±", SOS: "ðŸ‡¸ðŸ‡´", SRD: "ðŸ‡¸ðŸ‡·", SSP: "ðŸ‡¸ðŸ‡¸", STN: "ðŸ‡¸ðŸ‡¹", SVC: "ðŸ‡¸ðŸ‡»", SYP: "ðŸ‡¸ðŸ‡¾", SZL: "ðŸ‡¸ðŸ‡¿", THB: "ðŸ‡¹ðŸ‡­", TJS: "ðŸ‡¹ðŸ‡¯", TMT: "ðŸ‡¹ðŸ‡²", TND: "ðŸ‡¹ðŸ‡³", TOP: "ðŸ‡¹ðŸ‡´", TRY: "ðŸ‡¹ðŸ‡·", TTD: "ðŸ‡¹ðŸ‡¹", TWD: "ðŸ‡¹ðŸ‡¼", TZS: "ðŸ‡¹ðŸ‡¿", UAH: "ðŸ‡ºðŸ‡¦", UGX: "ðŸ‡ºðŸ‡¬", USD: "ðŸ‡ºðŸ‡¸", UYU: "ðŸ‡ºðŸ‡¾", UZS: "ðŸ‡ºðŸ‡¿", VEF: "ðŸ‡»ðŸ‡ª", VES: "ðŸ‡»ðŸ‡ª", VND: "ðŸ‡»ðŸ‡³", VUV: "ðŸ‡»ðŸ‡º", WST: "ðŸ‡¼ðŸ‡¸", XAF: "ðŸ‡¨ðŸ‡«", XCD: "ðŸ‡¦ðŸ‡¬", XOF: "ðŸ‡¨ðŸ‡®", XPF: "ðŸ‡µðŸ‡«", YER: "ðŸ‡¾ðŸ‡ª", ZAR: "ðŸ‡¿ðŸ‡¦", ZMW: "ðŸ‡¿ðŸ‡²", ZWL: "ðŸ‡¿ðŸ‡¼", 
    };
    return flagEmojis[currencyCode] || currencyCode;
}

function convert(val, fromCurr, toCurr, rates) {
    if (fromCurr === "NGN") {
        return (val * rates[toCurr]).toFixed(2);
    }
    let v = (val / rates[fromCurr]) * rates[toCurr];
    return v.toFixed(2);
}

function displayRate() {
    let v1 = sel1.value;
    let v2 = sel2.value;

    const flagEmoji1 = getFlagEmoji(v1);
    const flagEmoji2 = getFlagEmoji(v2);

    let val = convert(1, v1, v2, mainContainerRates);
    val = Math.round(val);

    rate1.innerHTML = `${flagEmoji1} 1 ${v1} equals`;
    rate2.innerHTML = `${val} ${flagEmoji2} ${v2}`;
}

function updateRateCard() {
    const rateCardRows = document.querySelectorAll(".rate-card .rate-row");

    rateCardRows.forEach(row => {
        const currencyCode = row.querySelector("[data-currency-code]").getAttribute("data-currency-code");
        const rate = rateCardRates[currencyCode];

        const rateInNaira = convert(1, currencyCode, "NGN", rateCardRates);
        const roundedRate = Math.round(parseFloat(rateInNaira));

        row.querySelector("[data-currency-code]").textContent = `â‚¦ ${roundedRate}`;
    });
}

resultBtn.addEventListener("click", () => {
    let fromCurr = sel1.value;
    let fromVal = parseFloat(inpt1.value);
    let toCurr = sel2.value;

    if (isNaN(fromVal)) {
        alert("Enter a Number");
    } else {
        let cVal = convert(fromVal, fromCurr, toCurr, mainContainerRates);
        cVal = Math.round(cVal);
        inpt2.value = cVal;
    }
});

selects.forEach(s => {
    s.addEventListener("change", displayRate);
    s.addEventListener("click", () => {
        s.addEventListener("keypress", function filterCurrencies(event) {
            const filterLetter = event.key.toUpperCase();
            const filteredCurrencies = Object.keys(mainContainerRates).filter(code => code.startsWith(filterLetter));
            const newOptions = filteredCurrencies.map(code => `<option value="${code}">${getFlagEmoji(code)} ${code}</option>`).join('');
            s.innerHTML = newOptions;
            displayRate();
            s.removeEventListener("keypress", filterCurrencies);
        });
    });
});

document.querySelector(".swap").addEventListener("click", () => {
    let in1 = inpt1.value;
    let in2 = inpt2.value;
    let op1 = sel1.value;
    let op2 = sel2.value;

    inpt2.value = in1;
    inpt1.value = in2;

    sel2.value = op1;
    sel1.value = op2;

    displayRate();
});

// Live Clock
const clock = document.querySelector(".clock");

function updateClock() {
    const now = new Date();
    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', timeZoneName: 'short' };
    const formattedDate = now.toLocaleDateString('en-US', options);
    clock.textContent = formattedDate;
}

setInterval(updateClock, 1000);
updateClock();
